name: jj
description: Jujutsu (An experimental VCS)
flags:
  -h, --help: Print help (see more with '--help')
persistentflags:
  --at-operation=: Operation to load the repo at
  --at-op=: Operation to load the repo at
  --color=: When to colorize output
  --config=*: Additional configuration options (can be repeated)
  --config-file=*: Additional configuration files (can be repeated)
  --debug: Enable debug logging
  --ignore-immutable: Allow rewriting immutable commits
  --ignore-working-copy: Don't snapshot the working copy, and don't update it
  --no-pager: Disable the pager
  --quiet: Silence non-primary command output
  -R, --repository=: Path to repository to operate on
completion:
  flag:
    color:
    - always
    - never
    - debug
    - auto
    config-file:
    - $files
    repository:
    - $directories
commands:
- name: abandon
  description: Abandon a revision
  flags:
    -h, --help: Print help (see more with '--help')
    --restore-descendants: Do not modify the content of the children of the abandoned commits
    --retain-bookmarks: Do not delete bookmarks pointing to the revisions to abandon
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: absorb
  description: Move changes from a revision into the stack of mutable revisions
  flags:
    -f, --from=: Source revision to absorb from
    -h, --help: Print help (see more with '--help')
    -t, --into=*: Destination revisions to absorb into
    --to=*: Destination revisions to absorb into
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: bisect
  description: Find a bad revision by bisection
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: run
    description: Run a given command to find the first bad revision
    flags:
      --command!=: Command to run to determine whether the bug is present
      --find-good: Whether to find the first good revision instead
      -h, --help: Print help (see more with '--help')
      -r, --range!=*: Range of revisions to bisect
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: bookmark
  description: 'Manage bookmarks [default alias: b]'
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: create
    aliases:
    - c
    description: Create a new bookmark
    flags:
      -h, --help: Print help (see more with '--help')
      -r, --revision=: The bookmark's target revision
      --to=: The bookmark's target revision
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: delete
    aliases:
    - d
    description: Delete an existing bookmark and propagate the deletion to remotes on the next push
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: forget
    aliases:
    - f
    description: Forget a bookmark without marking it as a deletion to be pushed
    flags:
      -h, --help: Print help (see more with '--help')
      --include-remotes: When forgetting a local bookmark, also forget any corresponding remote bookmarks
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: list
    aliases:
    - l
    description: List bookmarks and their targets
    flags:
      -a, --all-remotes: Show all tracking and non-tracking remote bookmarks including the ones whose targets are synchronized with the local bookmarks
      --all&: Show all tracking and non-tracking remote bookmarks including the ones whose targets are synchronized with the local bookmarks
      -c, --conflicted: Show conflicted bookmarks only
      -h, --help: Print help (see more with '--help')
      --remote=*: Show all tracking and non-tracking remote bookmarks belonging to this remote
      -r, --revisions=*: Show bookmarks whose local targets are in the given revisions
      --sort=*: Sort bookmarks based on the given key (or multiple keys)
      -T, --template=: Render each bookmark using the given template
      -t, --tracked: Show remote tracked bookmarks only. Omits local Git-tracking bookmarks by default
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
        sort:
        - name
        - name-
        - author-name
        - author-name-
        - author-email
        - author-email-
        - author-date
        - author-date-
        - committer-name
        - committer-name-
        - committer-email
        - committer-email-
        - committer-date
        - committer-date-
  - name: move
    aliases:
    - m
    description: Move existing bookmarks to target revision
    flags:
      -B, --allow-backwards: Allow moving bookmarks backwards or sideways
      -f, --from=*: Move bookmarks from the given revisions
      -h, --help: Print help (see more with '--help')
      -t, --to=: Move bookmarks to this revision
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: rename
    aliases:
    - r
    description: Rename `old` bookmark name to `new` bookmark name
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
      - []
  - name: set
    aliases:
    - s
    description: Create or update a bookmark to point to a certain commit
    flags:
      -B, --allow-backwards: Allow moving the bookmark backwards or sideways
      -h, --help: Print help (see more with '--help')
      -r, --revision=: The bookmark's target revision
      --to=: The bookmark's target revision
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: track
    aliases:
    - t
    description: Start tracking given remote bookmarks
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: untrack
    description: Stop tracking given remote bookmarks
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: commit
  description: 'Update the description and create a new change on top [default alias: ci]'
  flags:
    -h, --help: Print help (see more with '--help')
    -i, --interactive: Interactively choose which changes to include in the first commit
    -m, --message=*: The change description to use (don't open editor)
    --tool=: Specify diff editor to be used (implies --interactive)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: config
  description: Manage config options
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: edit
    aliases:
    - e
    description: Start an editor on a jj config file
    flags:
      -h, --help: Print help (see more with '--help')
      --repo: Target the repo-level config
      --user: Target the user-level config
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: get
    aliases:
    - g
    description: Get the value of a given config option.
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
  - name: list
    aliases:
    - l
    description: List variables set in config files, along with their values
    flags:
      -h, --help: Print help (see more with '--help')
      --include-defaults: Whether to explicitly include built-in default values in the list
      --include-overridden: Allow printing overridden values
      --repo: Target the repo-level config
      -T, --template=: Render each variable using the given template
      --user: Target the user-level config
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
  - name: path
    aliases:
    - p
    description: Print the paths to the config files
    flags:
      -h, --help: Print help (see more with '--help')
      --repo: Target the repo-level config
      --user: Target the user-level config
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: set
    aliases:
    - s
    description: Update a config file to set the given option to a given value
    flags:
      -h, --help: Print help (see more with '--help')
      --repo: Target the repo-level config
      --user: Target the user-level config
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
      - []
  - name: unset
    aliases:
    - u
    description: Update a config file to unset the given option
    flags:
      -h, --help: Print help (see more with '--help')
      --repo: Target the repo-level config
      --user: Target the user-level config
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
- name: describe
  description: 'Update the change description or other metadata [default alias: desc]'
  flags:
    --edit: Open an editor
    -h, --help: Print help (see more with '--help')
    -m, --message=*: The change description to use (don't open editor)
    --stdin: Read the change description from stdin
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: diff
  description: Compare file contents between two revisions
  flags:
    --color-words: Show a word-level diff with changes indicated only by color
    --context=: Number of lines of context to show
    -f, --from=: Show changes from this revision
    --git: Show a Git-format diff
    -h, --help: Print help (see more with '--help')
    -w, --ignore-all-space: Ignore whitespace when comparing lines
    -b, --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
    --name-only: For each path, show only its path
    -r, --revisions=*: Show changes in these revisions
    --revision=*&: Show changes in these revisions
    --stat: Show a histogram of the changes
    -s, --summary: For each path, show only whether it was modified, added, or deleted
    -T, --template=: Render each file diff entry using the given template
    -t, --to=: Show changes to this revision
    --tool=: Generate diff by external command
    --types: For each path, show only its type before and after
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: diffedit
  description: Touch up the content changes in a revision with a diff editor
  flags:
    -f, --from=: Show changes from this revision
    -h, --help: Print help (see more with '--help')
    --restore-descendants: Preserve the content (not the diff) when rebasing descendants
    -r, --revision=: The revision to touch up
    -t, --to=: Edit changes in this revision
    --tool=: Specify diff editor to be used
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: duplicate
  description: Create new changes with the same content as existing ones
  flags:
    -d, --destination=*: The revision(s) to duplicate onto (can be repeated to create a merge commit)
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    --after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    -B, --insert-before=*: The revision(s) to insert before (can be repeated to create a merge commit)
    --before=*: The revision(s) to insert before (can be repeated to create a merge commit)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: edit
  description: Sets the specified revision as the working-copy revision
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positional:
    - []
- name: evolog
  aliases:
  - obslog
  - evolution-log
  description: Show how a change has evolved over time
  flags:
    --color-words: Show a word-level diff with changes indicated only by color
    --context=: Number of lines of context to show
    --git: Show a Git-format diff
    -h, --help: Print help (see more with '--help')
    --ignore-all-space: Ignore whitespace when comparing lines
    --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
    -n, --limit=: Limit number of revisions to show
    --name-only: For each path, show only its path
    --no-graph: Don't show the graph, show a flat list of revisions
    -p, --patch: Show patch compared to the previous version of this change
    --reversed: Show revisions in the opposite order (older revisions first)
    -r, --revisions=*: Follow changes from these revisions
    --revision=*&: Follow changes from these revisions
    --stat: Show a histogram of the changes
    -s, --summary: For each path, show only whether it was modified, added, or deleted
    -T, --template=: Render each revision using the given template
    --tool=: Generate diff by external command
    --types: For each path, show only its type before and after
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: file
  description: File operations
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: annotate
    description: Show the source change for each line of the target file
    flags:
      -h, --help: Print help (see more with '--help')
      -r, --revision=: an optional revision to start at
      -T, --template=: Render each line using the given template
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - - $files
  - name: chmod
    description: Sets or removes the executable bit for paths in the repo
    flags:
      -h, --help: Print help (see more with '--help')
      -r, --revision=: The revision to update
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - - "n\tMake a path non-executable (alias: normal)"
        - "x\tMake a path executable (alias: executable)"
      positionalany:
      - $files
  - name: list
    description: List files in a revision
    flags:
      -h, --help: Print help (see more with '--help')
      -r, --revision=: The revision to list files in
      -T, --template=: Render each file entry using the given template
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positionalany:
      - $files
  - name: show
    description: Print contents of files in a revision
    flags:
      -h, --help: Print help (see more with '--help')
      -r, --revision=: The revision to get the file contents from
      -T, --template=: Render each file metadata using the given template
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positionalany:
      - $files
  - name: track
    description: Start tracking specified paths in the working copy
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positionalany:
      - $files
  - name: untrack
    description: Stop tracking specified paths in the working copy
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positionalany:
      - $files
- name: fix
  description: Update files with formatting fixes or other changes
  flags:
    -h, --help: Print help (see more with '--help')
    --include-unchanged-files: Fix unchanged files in addition to changed ones. If no paths are specified, all files in the repo will be fixed
    -s, --source=*: Fix files in the specified revision(s) and their descendants. If no revisions are specified, this defaults to the `revsets.fix` setting, or `reachable(@, mutable())` if it is not set
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: gerrit
  description: Interact with Gerrit Code Review
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: upload
    description: Upload changes to Gerrit for code review, or update existing changes
    flags:
      -n, --dry-run: Do not actually push the changes to Gerrit
      -h, --help: Print help (see more with '--help')
      --remote=: The Gerrit remote to push to
      -b, --remote-branch=: The location where your changes are intended to land
      -r, --revisions=*: The revset, selecting which revisions are sent in to Gerrit
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: git
  description: Commands for working with Git remotes and the underlying Git repo
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: clone
    description: Create a new repo backed by a clone of a Git repo
    flags:
      --colocate: Whether or not to colocate the Jujutsu repo with the git repo
      --depth=: Create a shallow clone of the given depth
      --fetch-tags=: Configure when to fetch tags
      -h, --help: Print help (see more with '--help')
      --no-colocate: Disable colocation of the Jujutsu repo with the git repo
      --remote=: Name of the newly created remote
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        fetch-tags:
        - "all\tAlways fetch all tags"
        - "included\tOnly fetch tags that point to objects that are already being transmitted"
        - "none\tDo not fetch any tags"
        repository:
        - $directories
      positional:
      - []
      - - $directories
  - name: export
    description: Update the underlying Git repo with changes made in the repo
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: fetch
    description: Fetch from a Git remote
    flags:
      --all-remotes: Fetch from all remotes
      -b, --branch=*: Fetch only some of the branches
      --bookmark=*&: Fetch only some of the branches
      -h, --help: Print help (see more with '--help')
      --remote=*: The remote to fetch from (only named remotes are supported, can be repeated)
      --tracked: Fetch only tracked bookmarks
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: import
    description: Update repo with changes made in the underlying Git repo
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: init
    description: Create a new Git backed repo
    flags:
      --colocate: Specifies that the `jj` repo should also be a valid `git` repo, allowing the use of both `jj` and `git` commands in the same directory
      --git-repo=: Specifies a path to an **existing** git repository to be used as the backing git repo for the newly created `jj` repo
      -h, --help: Print help (see more with '--help')
      --no-colocate: Disable colocation of the Jujutsu repo with the git repo
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        git-repo:
        - $directories
        repository:
        - $directories
      positional:
      - - $directories
  - name: push
    description: Push to a Git remote
    flags:
      --all: Push all bookmarks (including new bookmarks)
      --allow-empty-description: Allow pushing commits with empty descriptions
      -N, --allow-new: Allow pushing new bookmarks
      --allow-private: Allow pushing commits that are private
      -b, --bookmark=*: Push only this bookmark, or bookmarks matching a pattern (can be repeated)
      --branch=*&: Push only this bookmark, or bookmarks matching a pattern (can be repeated)
      -c, --change=*: Push this commit by creating a bookmark (can be repeated)
      --deleted: Push all deleted bookmarks
      --dry-run: Only display what will change on the remote
      -h, --help: Print help (see more with '--help')
      --named=*: Specify a new bookmark name and a revision to push under that name, e.g. '--named myfeature=@'
      --remote=: The remote to push to (only named remotes are supported)
      -r, --revisions=*: Push bookmarks pointing to these commits (can be repeated)
      --tracked: Push all tracked bookmarks
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: remote
    description: Manage Git remotes
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
    commands:
    - name: add
      description: Add a Git remote
      flags:
        --fetch-tags=: Configure when to fetch tags
        -h, --help: Print help (see more with '--help')
      completion:
        flag:
          color:
          - always
          - never
          - debug
          - auto
          config-file:
          - $files
          fetch-tags:
          - "all\tAlways fetch all tags"
          - "included\tOnly fetch tags that point to objects that are already being transmitted"
          - "none\tDo not fetch any tags"
          repository:
          - $directories
        positional:
        - []
        - []
    - name: list
      description: List Git remotes
      flags:
        -h, --help: Print help (see more with '--help')
      completion:
        flag:
          color:
          - always
          - never
          - debug
          - auto
          config-file:
          - $files
          repository:
          - $directories
    - name: remove
      description: Remove a Git remote and forget its bookmarks
      flags:
        -h, --help: Print help (see more with '--help')
      completion:
        flag:
          color:
          - always
          - never
          - debug
          - auto
          config-file:
          - $files
          repository:
          - $directories
        positional:
        - []
    - name: rename
      description: Rename a Git remote
      flags:
        -h, --help: Print help (see more with '--help')
      completion:
        flag:
          color:
          - always
          - never
          - debug
          - auto
          config-file:
          - $files
          repository:
          - $directories
        positional:
        - []
        - []
    - name: set-url
      description: Set the URL of a Git remote
      flags:
        -h, --help: Print help (see more with '--help')
      completion:
        flag:
          color:
          - always
          - never
          - debug
          - auto
          config-file:
          - $files
          repository:
          - $directories
        positional:
        - []
        - []
  - name: root
    description: Show the underlying Git directory of a repository using the Git backend
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: help
  description: Print this message or the help of the given subcommand(s)
  flags:
    -h, --help: Print help (see more with '--help')
    -k, --keyword=: Show help for keywords instead of commands
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      keyword:
      - "bookmarks\tNamed pointers to revisions (similar to Git's branches)"
      - "config\tHow and where to set configuration options"
      - "filesets\tA functional language for selecting a set of files"
      - "glossary\tDefinitions of various terms"
      - "revsets\tA functional language for selecting a set of revision"
      - "templates\tA functional language to customize command output"
      - "tutorial\tShow a tutorial to get started with jj"
      repository:
      - $directories
- name: interdiff
  description: Compare the changes of two commits
  flags:
    --color-words: Show a word-level diff with changes indicated only by color
    --context=: Number of lines of context to show
    -f, --from=: Show changes from this revision
    --git: Show a Git-format diff
    -h, --help: Print help (see more with '--help')
    -w, --ignore-all-space: Ignore whitespace when comparing lines
    -b, --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
    --name-only: For each path, show only its path
    --stat: Show a histogram of the changes
    -s, --summary: For each path, show only whether it was modified, added, or deleted
    -t, --to=: Show changes to this revision
    --tool=: Generate diff by external command
    --types: For each path, show only its type before and after
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: log
  description: Show revision history
  flags:
    --color-words: Show a word-level diff with changes indicated only by color
    --context=: Number of lines of context to show
    --git: Show a Git-format diff
    -h, --help: Print help (see more with '--help')
    --ignore-all-space: Ignore whitespace when comparing lines
    --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
    -n, --limit=: Limit number of revisions to show
    --name-only: For each path, show only its path
    --no-graph: Don't show the graph, show a flat list of revisions
    -p, --patch: Show patch
    --reversed: Show revisions in the opposite order (older revisions first)
    -r, --revisions=*: Which revisions to show
    --stat: Show a histogram of the changes
    -s, --summary: For each path, show only whether it was modified, added, or deleted
    -T, --template=: Render each revision using the given template
    --tool=: Generate diff by external command
    --types: For each path, show only its type before and after
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: metaedit
  description: Modify the metadata of a revision without changing its content
  flags:
    --author=: Set author to the provided string
    --author-timestamp=: Set the author date to the given date either human readable, eg Sun, 23 Jan 2000 01:23:45 JST) or as a time stamp, eg 2000-01-23T01:23:45+09:00)
    -h, --help: Print help (see more with '--help')
    --update-author: Update the author to the configured user
    --update-author-timestamp: Update the author timestamp
    --update-change-id: Generate a new change-id
    --update-committer-timestamp: Update the committer timestamp
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: new
  description: Create a new, empty change and (by default) edit it in the working copy
  flags:
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: Insert the new change after the given commit(s)
    --after=*: Insert the new change after the given commit(s)
    -B, --insert-before=*: Insert the new change before the given commit(s)
    --before=*: Insert the new change before the given commit(s)
    -m, --message=*: The change description to use
    --no-edit: Do not edit the newly created change
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: next
  description: Move the working-copy commit to the child revision
  flags:
    --conflict: Jump to the next conflicted descendant
    -e, --edit: Instead of creating a new working-copy commit on top of the target commit (like `jj new`), edit the target commit directly (like `jj edit`)
    -h, --help: Print help (see more with '--help')
    -n, --no-edit: The inverse of `--edit`
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positional:
    - []
- name: operation
  aliases:
  - op
  description: Commands for working with the operation log
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: abandon
    description: Abandon operation history
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
  - name: diff
    description: Compare changes to the repository between two operations
    flags:
      --color-words: Show a word-level diff with changes indicated only by color
      --context=: Number of lines of context to show
      -f, --from=: Show repository changes from this operation
      --git: Show a Git-format diff
      -h, --help: Print help (see more with '--help')
      --ignore-all-space: Ignore whitespace when comparing lines
      --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
      --name-only: For each path, show only its path
      --no-graph: Don't show the graph, show a flat list of modified changes
      --operation=: Show repository changes in this operation, compared to its parent
      --op=: Show repository changes in this operation, compared to its parent
      -p, --patch: Show patch of modifications to changes
      --stat: Show a histogram of the changes
      -s, --summary: For each path, show only whether it was modified, added, or deleted
      -t, --to=: Show repository changes to this operation
      --tool=: Generate diff by external command
      --types: For each path, show only its type before and after
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: log
    description: Show the operation log
    flags:
      --color-words: Show a word-level diff with changes indicated only by color
      --context=: Number of lines of context to show
      --git: Show a Git-format diff
      -h, --help: Print help (see more with '--help')
      --ignore-all-space: Ignore whitespace when comparing lines
      --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
      -n, --limit=: Limit number of operations to show
      --name-only: For each path, show only its path
      --no-graph: Don't show the graph, show a flat list of operations
      -d, --op-diff: Show changes to the repository at each operation
      -p, --patch: Show patch of modifications to changes (implies --op-diff)
      --reversed: Show operations in the opposite order (older operations first)
      --stat: Show a histogram of the changes
      -s, --summary: For each path, show only whether it was modified, added, or deleted
      -T, --template=: Render each operation using the given template
      --tool=: Generate diff by external command
      --types: For each path, show only its type before and after
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: restore
    description: Create a new operation that restores the repo to an earlier state
    flags:
      -h, --help: Print help (see more with '--help')
      --what=*: What portions of the local state to restore (can be repeated)
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
        what:
        - "repo\tThe jj repo state and local bookmarks"
        - "remote-tracking\tThe remote-tracking bookmarks. Do not restore these if you'd like to push after the undo"
      positional:
      - []
  - name: revert
    description: Create a new operation that reverts an earlier operation
    flags:
      -h, --help: Print help (see more with '--help')
      --what=*: What portions of the local state to restore (can be repeated)
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
        what:
        - "repo\tThe jj repo state and local bookmarks"
        - "remote-tracking\tThe remote-tracking bookmarks. Do not restore these if you'd like to push after the undo"
      positional:
      - []
  - name: show
    description: Show changes to the repository in an operation
    flags:
      --color-words: Show a word-level diff with changes indicated only by color
      --context=: Number of lines of context to show
      --git: Show a Git-format diff
      -h, --help: Print help (see more with '--help')
      --ignore-all-space: Ignore whitespace when comparing lines
      --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
      --name-only: For each path, show only its path
      --no-graph: Don't show the graph, show a flat list of modified changes
      --no-op-diff: Do not show operation diff
      -p, --patch: Show patch of modifications to changes
      --stat: Show a histogram of the changes
      -s, --summary: For each path, show only whether it was modified, added, or deleted
      -T, --template=: Render the operation using the given template
      --tool=: Generate diff by external command
      --types: For each path, show only its type before and after
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
- name: parallelize
  description: Parallelize revisions by making them siblings
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: prev
  description: Change the working copy revision relative to the parent revision
  flags:
    --conflict: Jump to the previous conflicted ancestor
    -e, --edit: Edit the parent directly, instead of moving the working-copy commit
    -h, --help: Print help (see more with '--help')
    -n, --no-edit: The inverse of `--edit`
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positional:
    - []
- name: rebase
  description: Move revisions to different parent(s)
  flags:
    -b, --branch=*: Rebase the whole branch relative to destination's ancestors (can be repeated)
    -d, --destination=*: The revision(s) to rebase onto (can be repeated to create a merge commit)
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    --after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    -B, --insert-before=*: The revision(s) to insert before (can be repeated to create a merge commit)
    --before=*: The revision(s) to insert before (can be repeated to create a merge commit)
    --keep-divergent: Keep divergent commits while rebasing
    -r, --revisions=*: Rebase the given revisions, rebasing descendants onto this revision's parent(s)
    --skip-emptied: If true, when rebasing would produce an empty commit, the commit is abandoned. It will not be abandoned if it was already empty before the rebase. Will never skip merge commits with multiple non-empty parents
    -s, --source=*: Rebase specified revision(s) together with their trees of descendants (can be repeated)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: redo
  description: Redo the most recently undone operation
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: resolve
  description: Resolve conflicted files with an external merge tool
  flags:
    -h, --help: Print help (see more with '--help')
    -l, --list: Instead of resolving conflicts, list all the conflicts
    -r, --revision=: ''
    --tool=: Specify 3-way merge tool to be used
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: restore
  description: Restore paths from another revision
  flags:
    -c, --changes-in=: Undo the changes in a revision as compared to the merge of its parents
    -f, --from=: Revision to restore from (source)
    -h, --help: Print help (see more with '--help')
    -i, --interactive: Interactively choose which parts to restore
    -t, --into=: Revision to restore into (destination)
    --to=: Revision to restore into (destination)
    --restore-descendants: Preserve the content (not the diff) when rebasing descendants
    --tool=: Specify diff editor to be used (implies --interactive)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: revert
  description: Apply the reverse of the given revision(s)
  flags:
    -d, --destination=*: The revision(s) to apply the reverse changes on top of
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: The revision(s) to insert the reverse changes after (can be repeated to create a merge commit)
    --after=*: The revision(s) to insert the reverse changes after (can be repeated to create a merge commit)
    -B, --insert-before=*: The revision(s) to insert the reverse changes before (can be repeated to create a merge commit)
    --before=*: The revision(s) to insert the reverse changes before (can be repeated to create a merge commit)
    -r, --revisions=*: The revision(s) to apply the reverse of
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: root
  description: Show the current workspace root directory (shortcut for `jj workspace root`)
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: show
  description: Show commit description and changes in a revision
  flags:
    --color-words: Show a word-level diff with changes indicated only by color
    --context=: Number of lines of context to show
    --git: Show a Git-format diff
    -h, --help: Print help (see more with '--help')
    -w, --ignore-all-space: Ignore whitespace when comparing lines
    -b, --ignore-space-change: Ignore changes in amount of whitespace when comparing lines
    --name-only: For each path, show only its path
    --no-patch: Do not show the patch
    --stat: Show a histogram of the changes
    -s, --summary: For each path, show only whether it was modified, added, or deleted
    -T, --template=: Render a revision using the given template
    --tool=: Generate diff by external command
    --types: For each path, show only its type before and after
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positional:
    - []
- name: sign
  description: Cryptographically sign a revision
  flags:
    -h, --help: Print help (see more with '--help')
    --key=: The key used for signing
    -r, --revisions=*: What revision(s) to sign
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: simplify-parents
  description: Simplify parent edges for the specified revision(s)
  flags:
    -h, --help: Print help (see more with '--help')
    -r, --revisions=*: Simplify specified revision(s) (can be repeated)
    -s, --source=*: Simplify specified revision(s) together with their trees of descendants (can be repeated)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: sparse
  description: Manage which paths from the working-copy commit are present in the working copy
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: edit
    description: Start an editor to update the patterns that are present in the working copy
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: list
    description: List the patterns that are currently present in the working copy
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: reset
    description: Reset the patterns to include all files in the working copy
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: set
    description: Update the patterns that are present in the working copy
    flags:
      --add=*: Patterns to add to the working copy
      --clear: Include no files in the working copy (combine with --add)
      -h, --help: Print help (see more with '--help')
      --remove=*: Patterns to remove from the working copy
    completion:
      flag:
        add:
        - $files
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        remove:
        - $files
        repository:
        - $directories
- name: split
  description: Split a revision in two
  flags:
    -d, --destination=*: The revision(s) to base the new revision onto (can be repeated to create a merge commit)
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    --after=*: The revision(s) to insert after (can be repeated to create a merge commit)
    -B, --insert-before=*: The revision(s) to insert before (can be repeated to create a merge commit)
    --before=*: The revision(s) to insert before (can be repeated to create a merge commit)
    -i, --interactive: Interactively choose which parts to split
    -m, --message=*: The change description to use (don't open editor)
    -p, --parallel: Split the revision into two parallel revisions instead of a parent and child
    -r, --revision=: The revision to split
    --tool=: Specify diff editor to be used (implies --interactive)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: squash
  description: Move changes from a revision into another revision
  flags:
    -d, --destination=*: (Experimental) The revision(s) to use as parent for the new commit (can be repeated to create a merge commit)
    -f, --from=*: 'Revision(s) to squash from (default: @)'
    -h, --help: Print help (see more with '--help')
    -A, --insert-after=*: (Experimental) The revision(s) to insert the new commit after (can be repeated to create a merge commit)
    --after=*: (Experimental) The revision(s) to insert the new commit after (can be repeated to create a merge commit)
    -B, --insert-before=*: (Experimental) The revision(s) to insert the new commit before (can be repeated to create a merge commit)
    --before=*: (Experimental) The revision(s) to insert the new commit before (can be repeated to create a merge commit)
    -i, --interactive: Interactively choose which parts to squash
    -t, --into=: 'Revision to squash into (default: @)'
    --to=: 'Revision to squash into (default: @)'
    -k, --keep-emptied: The source revision will not be abandoned
    -m, --message=*: The description to use for squashed revision (don't open editor)
    -r, --revision=: 'Revision to squash into its parent (default: @). Incompatible with the experimental `-d`/`-A`/`-B` options'
    --tool=: Specify diff editor to be used (implies --interactive)
    -u, --use-destination-message: Use the description of the destination revision and discard the description(s) of the source revision(s)
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: status
  description: 'Show high-level repo status [default alias: st]'
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positionalany:
    - $files
- name: tag
  description: Manage tags
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: list
    aliases:
    - l
    description: List tags
    flags:
      -h, --help: Print help (see more with '--help')
      -T, --template=: Render each tag using the given template
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: undo
  description: Undo the last operation
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
    positional:
    - []
- name: unsign
  description: Drop a cryptographic signature
  flags:
    -h, --help: Print help (see more with '--help')
    -r, --revisions=*: What revision(s) to unsign
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: util
  description: Infrequently used commands such as for generating shell completions
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: completion
    description: Print a command-line-completion script
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - - bash
        - elvish
        - fish
        - nushell
        - power-shell
        - zsh
  - name: config-schema
    description: Print the JSON schema for the jj TOML config format
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: exec
    description: Execute an external command via jj
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
      positionalany:
      - $files
  - name: gc
    description: Run backend-dependent garbage collection
    flags:
      --expire=: Time threshold
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: install-man-pages
    description: Install Jujutsu's manpages to the provided path
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - - $files
  - name: markdown-help
    description: Print the CLI help for all subcommands in Markdown
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
- name: version
  description: Display version information
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
- name: workspace
  description: Commands for working with workspaces
  flags:
    -h, --help: Print help (see more with '--help')
  completion:
    flag:
      color:
      - always
      - never
      - debug
      - auto
      config-file:
      - $files
      repository:
      - $directories
  commands:
  - name: add
    description: Add a workspace
    flags:
      -h, --help: Print help (see more with '--help')
      --name=: A name for the workspace
      -r, --revision=*: A list of parent revisions for the working-copy commit of the newly created workspace. You may specify nothing, or any number of parents
      --sparse-patterns=: How to handle sparse patterns when creating a new workspace
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
        sparse-patterns:
        - "copy\tCopy all sparse patterns from the current workspace"
        - "full\tInclude all files in the new workspace"
        - "empty\tClear all files from the workspace (it will be empty)"
      positional:
      - - $directories
  - name: forget
    description: Stop tracking a workspace's working-copy commit in the repo
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: list
    description: List workspaces
    flags:
      -h, --help: Print help (see more with '--help')
      -T, --template=: Render each workspace using the given template
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: rename
    description: Renames the current workspace
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
      positional:
      - []
  - name: root
    description: Show the current workspace root directory
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
  - name: update-stale
    description: Update a workspace that has become stale
    flags:
      -h, --help: Print help (see more with '--help')
    completion:
      flag:
        color:
        - always
        - never
        - debug
        - auto
        config-file:
        - $files
        repository:
        - $directories
