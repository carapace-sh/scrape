# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: minikube
description: minikube quickly sets up a local Kubernetes cluster
persistentflags:
    --add_dir_header: If true, adds the file directory to the header of the log messages
    --alsologtostderr: log to standard error as well as files (no effect when -logtostderr=true)
    --log_backtrace_at=: when logging hits line file:N, emit a stack trace
    --log_dir=: If non-empty, write log files in this directory (no effect when -logtostderr=true)
    --log_file=: If non-empty, use this log file (no effect when -logtostderr=true)
    --log_file_max_size=: Defines the maximum size a log file can grow to (no effect when -logtostderr=true). Unit is megabytes. If the value is 0, the maximum file size is unlimited.
    --logtostderr: log to standard error instead of files
    --one_output: If true, only write logs to their native severity level (vs also writing to each lower severity level; no effect when -logtostderr=true)
    --rootless: Force to use rootless driver (docker and podman driver only)
    --skip-audit: Skip recording the current command in the audit logs.
    --skip_headers: If true, avoid header prefixes in the log messages
    --skip_log_headers: If true, avoid headers when opening log files (no effect when -logtostderr=true)
    --stderrthreshold=: logs at or above this threshold go to stderr when writing to files and stderr (no effect when -logtostderr=true or -alsologtostderr=true)
    --user=: Specifies the user executing the operation. Useful for auditing operations executed by 3rd party tools. Defaults to the operating system username.
    --vmodule=: comma-separated list of pattern=N settings for file-filtered logging
    -b, --bootstrapper=: The name of the cluster bootstrapper that will set up the Kubernetes cluster.
    -h, --help: ""
    -p, --profile=: The name of the minikube VM being used. This can be set to allow having multiple instances of minikube independently.
    -v, --v=: number for the log level verbosity
commands:
    - name: addons SUBCOMMAND [flags]
      description: Enable or disable a minikube addon
      commands:
        - name: configure ADDON_NAME
          description: 'Configures the addon w/ADDON_NAME within minikube (example: minikube addons configure registry-creds). For a list of available addons use: minikube addons list'
          flags:
            -f, --config-file=: An optional configuration file to read addon specific configs from instead of being prompted each time.
        - name: disable ADDON_NAME
          description: 'Disables the addon w/ADDON_NAME within minikube (example: minikube addons disable dashboard). For a list of available addons use: minikube addons list '
        - name: enable ADDON_NAME
          description: 'Enables the addon w/ADDON_NAME within minikube. For a list of available addons use: minikube addons list '
          flags:
            --force: If true, will perform potentially dangerous operations. Use with discretion.
            --images=: Images used by this addon. Separated by commas.
            --refresh: If true, pods might get deleted and restarted on addon enable
            --registries=: Registries used by this addon. Separated by commas.
        - name: images ADDON_NAME
          description: 'List image names the addon w/ADDON_NAME used. For a list of available addons use: minikube addons list'
          flags:
            -o, --output=: minikube addons images ADDON_NAME --output OUTPUT. table, json
        - name: list
          description: Lists all available minikube addons as well as their current statuses (enabled/disabled)
          flags:
            -d, --docs: If true, print web links to addons' documentation if using --output=list (default).
            -o, --output=: minikube addons list --output OUTPUT. json, list
        - name: open ADDON_NAME
          description: 'Opens the addon w/ADDON_NAME within minikube (example: minikube addons open dashboard). For a list of available addons use: minikube addons list '
          flags:
            --https: Open the addons URL with https instead of http
            --interval=: The time interval for each check that wait performs in seconds
            --url: Display the Kubernetes addons URL in the CLI instead of opening it in the default browser
            --wait=: Amount of time to wait for service in seconds
          persistentflags:
            --format=: Format to output addons URL in.  This format will be applied to each url individually and they will be printed one at a time.
    - name: cache
      description: Manage cache for images
      commands:
        - name: add
          description: Add an image to local cache.
          flags:
            --all: Add image to cache for all running minikube clusters
        - name: delete
          description: Delete an image from the local cache.
        - name: list
          description: List all available images from the local cache.
          flags:
            --format=: |-
                Go template format string for the cache list output.  The format for Go templates can be found here: https://pkg.go.dev/text/template
                For the list of accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#CacheListTemplate
        - name: reload
          description: reload cached images.
    - name: completion SHELL
      description: Generate command completion for a shell
      commands:
        - name: bash
          description: bash completion.
        - name: fish
          description: fish completion.
        - name: powershell
          description: powershell completion.
        - name: zsh
          description: zsh completion.
    - name: config SUBCOMMAND [flags]
      description: Modify persistent configuration values
      commands:
        - name: defaults PROPERTY_NAME
          description: Lists all valid default values for PROPERTY_NAME
          flags:
            -o, --output=: 'Output format. Accepted values: [json, yaml]'
        - name: get PROPERTY_NAME
          description: Gets the value of PROPERTY_NAME from the minikube config file
        - name: set PROPERTY_NAME PROPERTY_VALUE
          description: Sets an individual value in a minikube config file
        - name: unset PROPERTY_NAME
          description: unsets an individual value in a minikube config file
        - name: view
          description: Display values currently set in the minikube config file
          flags:
            --format=: |-
                Go template format string for the config view output.  The format for Go templates can be found here: https://pkg.go.dev/text/template
                For the list of accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd/config#ConfigViewTemplate
    - name: cp <source node name>:<source file path> <target node name>:<target file absolute path>
      description: Copy the specified file into minikube
    - name: dashboard
      description: Access the Kubernetes dashboard running within the minikube cluster
      flags:
        --port=: Exposed port of the proxyfied dashboard. Set to 0 to pick a random port.
        --url: Display dashboard URL instead of opening a browser
    - name: delete
      description: Deletes a local Kubernetes cluster
      flags:
        --all: Set flag to delete all profiles
        --purge: Set this flag to delete the '.minikube' folder from your user directory.
        -o, --output=: 'Format to print stdout in. Options include: [text,json]'
    - name: docker-env
      description: Provides instructions to point your terminal's docker-cli to the Docker Engine inside minikube. (Useful for building docker images directly inside minikube)
      flags:
        --no-proxy: Add machine IP to NO_PROXY environment variable
        --shell=: 'Force environment to be configured for a specified shell: [fish, cmd, powershell, tcsh, bash, zsh], default is auto-detect'
        --ssh-add: Add SSH identity key to SSH authentication agent
        --ssh-host: Use SSH connection instead of HTTPS (port 2376)
        -o, --output=: One of 'text', 'yaml' or 'json'.
        -u, --unset: Unset variables instead of setting them
    - name: generate-docs
      description: Populates the specified folder with documentation in markdown about minikube
      hidden: true
      flags:
        --code-path=: The path on the file system where the error code docs in markdown need to be saved
        --path=: The path on the file system where the docs in markdown need to be saved
        --test-path=: The path on the file system where the testing docs in markdown need to be saved
    - name: help [command]
      description: Help about any command
    - name: image COMMAND
      description: Manage images
      commands:
        - name: build PATH | URL | -
          description: Build a container image in minikube
          flags:
            --all: Build image on all nodes.
            --build-env*=: 'Environment variables to pass to the build. (format: key=value)'
            --build-opt*=: 'Specify arbitrary flags to pass to the build. (format: key=value)'
            --push: Push the new image (requires tag)
            -f, --file=: Path to the Dockerfile to use (optional)
            -n, --node=: The node to build on. Defaults to the primary control plane.
            -t, --tag=: Tag to apply to the new image (optional)
        - name: load IMAGE | ARCHIVE | -
          description: Load an image into minikube
          flags:
            --daemon: Cache image from docker daemon
            --overwrite: Overwrite image even if same image:tag name exists
            --pull: Pull the remote image (no caching)
            --remote: Cache image from remote registry
        - name: ls
          aliases:
            - list
          description: List images
          flags:
            --format=: 'Format output. One of: short|table|json|yaml'
        - name: pull
          description: Pull images
        - name: push
          description: Push images
        - name: rm IMAGE [IMAGE...]
          aliases:
            - remove
            - unload
          description: Remove one or more images
        - name: save IMAGE [ARCHIVE | -]
          description: Save a image from minikube
          flags:
            --daemon: Cache image to docker daemon
            --remote: Cache image to remote registry
        - name: tag
          aliases:
            - list
          description: Tag images
    - name: ip
      description: Retrieves the IP address of the specified node
      flags:
        -n, --node=: The node to get IP. Defaults to the primary control plane.
    - name: kubectl
      description: Run a kubectl binary matching the cluster version
      flags:
        --ssh: Use SSH for running kubernetes client on the node
    - name: license
      description: Outputs the licenses of dependencies to a directory
      flags:
        -d, --dir=: Directory to output licenses to
    - name: logs
      description: Returns logs to debug a local Kubernetes cluster
      flags:
        --audit: Show only the audit logs
        --file=: If present, writes to the provided file instead of stdout.
        --last-start-only: Show only the last start logs.
        --node=: The node to get logs from. Defaults to the primary control plane.
        --problems: Show only log entries which point to known problems
        -f, --follow: Show only the most recent journal entries, and continuously print new entries as they are appended to the journal.
        -n, --length=: Number of lines back to go within the log
    - name: mount [flags] <source directory>:<target directory>
      description: Mounts the specified directory into minikube
      flags:
        --9p-version=: Specify the 9p version that the mount should use
        --gid=: Default group id used for the mount
        --ip=: Specify the ip that the mount should be setup on
        --kill: Kill the mount process spawned by minikube start
        --msize=: The number of bytes to use for 9p packet payload
        --options*=: Additional mount options, such as cache=fscache
        --port=: Specify the port that the mount should be setup on, where 0 means any free port.
        --type=: 'Specify the mount filesystem type (supported types: 9p)'
        --uid=: Default user id used for the mount
    - name: node
      description: Add, remove, or list additional nodes
      commands:
        - name: add
          description: Adds a node to the given cluster.
          flags:
            --control-plane: If set, added node will become a control-plane. Defaults to false. Currently only supported for existing HA (multi-control plane) clusters.
            --delete-on-failure: If set, delete the current cluster if start fails and try again. Defaults to false.
            --worker: If set, added node will be available as worker. Defaults to true.
        - name: delete
          description: Deletes a node from a cluster.
        - name: list
          description: List nodes.
        - name: start
          description: Starts a node.
          flags:
            --delete-on-failure: If set, delete the current cluster if start fails and try again. Defaults to false.
        - name: stop
          description: Stops a node in a cluster.
    - name: options
      description: Show a list of global command-line options (applies to all commands).
    - name: pause
      description: pause Kubernetes
      flags:
        -A, --all-namespaces: If set, pause all namespaces
        -n, --namespaces*=: namespaces to pause
        -o, --output=: 'Format to print stdout in. Options include: [text,json]'
    - name: podman-env
      description: Configure environment to use minikube's Podman service
      flags:
        --shell=: 'Force environment to be configured for a specified shell: [fish, cmd, powershell, tcsh, bash, zsh], default is auto-detect'
        -u, --unset: Unset variables instead of setting them
    - name: profile [MINIKUBE_PROFILE_NAME].  You can return to the default minikube profile by running `minikube profile default`
      description: Get or list the current profiles (clusters)
      commands:
        - name: list
          description: Lists all minikube profiles.
          flags:
            -l, --light: If true, returns list of profiles faster by skipping validating the status of the cluster.
            -o, --output=: The output format. One of 'json', 'table'
    - name: service [flags] SERVICE
      description: Returns a URL to connect to a service
      flags:
        --all: Forwards all services in a namespace (defaults to "false")
        --https: Open the service URL with https instead of http (defaults to "false")
        --interval=: The initial time interval for each check that wait performs in seconds
        --url: Display the Kubernetes service URL in the CLI instead of opening it in the default browser
        --wait=: Amount of time to wait for a service in seconds
        -n, --namespace=: The service namespace
      persistentflags:
        --format=: Format to output service URL in. This format will be applied to each url individually and they will be printed one at a time.
      commands:
        - name: list [flags]
          description: Lists the URLs for the services in your local cluster
          flags:
            -n, --namespace=: The services namespace
            -o, --output=: The output format. One of 'json', 'table'
    - name: ssh
      description: Log into the minikube environment (for debugging)
      flags:
        --native-ssh: Use native Golang SSH client (default true). Set to 'false' to use the command line 'ssh' command when accessing the docker machine. Useful for the machine drivers when they will not start with 'Waiting for SSH'.
        -n, --node=: The node to ssh into. Defaults to the primary control plane.
    - name: ssh-host
      description: Retrieve the ssh host key of the specified node
      flags:
        --append-known: Add host key to SSH known_hosts file
        -n, --node=: The node to ssh into. Defaults to the primary control plane.
    - name: ssh-key
      description: Retrieve the ssh identity key path of the specified node
      flags:
        -n, --node=: The node to get ssh-key path. Defaults to the primary control plane.
    - name: start
      description: Starts a local Kubernetes cluster
      flags:
        --addons*=: Enable addons. see `minikube addons list` for a list of valid addon names.
        --apiserver-ips*=: A set of apiserver IP Addresses which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine
        --apiserver-name=: The authoritative apiserver hostname for apiserver certificates and connectivity. This can be used if you want to make the apiserver available from outside the machine
        --apiserver-names*=: A set of apiserver names which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine
        --apiserver-port=: The apiserver listening port
        --auto-pause-interval=: Duration of inactivity before the minikube VM is paused (default 1m0s)
        --auto-update-drivers: If set, automatically updates drivers to the latest version. Defaults to true.
        --base-image=: The base image to use for docker/podman drivers. Intended for local development.
        --binary-mirror=: Location to fetch kubectl, kubelet, & kubeadm binaries from.
        --cache-images: If true, cache docker images for the current bootstrapper and load them into the machine. Always false with --driver=none.
        --cert-expiration=: Duration until minikube certificate expiration, defaults to three years (26280h).
        --cni=: 'CNI plug-in to use. Valid options: auto, bridge, calico, cilium, flannel, kindnet, or path to a CNI manifest (default: auto)'
        --cpus=: Number of CPUs allocated to Kubernetes. Use "max" to use the maximum number of CPUs. Use "no-limit" to not specify a limit (Docker/Podman only)
        --cri-socket=: The cri socket path to be used.
        --delete-on-failure: If set, delete the current cluster if start fails and try again. Defaults to false.
        --disable-driver-mounts: Disables the filesystem mounts provided by the hypervisors
        --disable-metrics: If set, disables metrics reporting (CPU and memory usage), this can improve CPU usage. Defaults to false.
        --disable-optimizations: If set, disables optimizations that are set for local Kubernetes. Including decreasing CoreDNS replicas from 2 to 1. Defaults to false.
        --disk-size=: 'Disk size allocated to the minikube VM (format: <number>[<unit>], where unit = b, k, m or g).'
        --dns-domain=: The cluster dns domain name used in the Kubernetes cluster
        --dns-proxy: Enable proxy for NAT DNS requests (virtualbox driver only)
        --docker-env*=: 'Environment variables to pass to the Docker daemon. (format: key=value)'
        --docker-opt*=: 'Specify arbitrary flags to pass to the Docker daemon. (format: key=value)'
        --download-only: If true, only download and cache files for later use - don't install or start anything.
        --dry-run: dry-run mode. Validates configuration, but does not mutate system state
        --embed-certs: if true, will embed the certs in kubeconfig.
        --enable-default-cni: 'DEPRECATED: Replaced by --cni=bridge'
        --extra-config=: |-
            A set of key=value pairs that describe configuration that may be passed to different components.
            		The key should be '.' separated, and the first part before the dot is the component to apply the configuration to.
            		Valid components are: kubelet, kubeadm, apiserver, controller-manager, etcd, proxy, scheduler
            		Valid kubeadm parameters: ignore-preflight-errors, dry-run, kubeconfig, kubeconfig-dir, node-name, cri-socket, experimental-upload-certs, certificate-key, rootfs, skip-phases, pod-network-cidr
        --extra-disks=: Number of extra disks created and attached to the minikube VM (currently only implemented for hyperkit, kvm2, qemu2, and vfkit drivers)
        --feature-gates=: A set of key=value pairs that describe feature gates for alpha/experimental features.
        --force: Force minikube to perform possibly dangerous operations
        --force-systemd: If set, force the container runtime to use systemd as cgroup manager. Defaults to false.
        --ha: Create Highly Available Multi-Control Plane Cluster with a minimum of three control-plane nodes that will also be marked for work.
        --host-dns-resolver: Enable host resolver for NAT DNS requests (virtualbox driver only)
        --host-only-cidr=: The CIDR to be used for the minikube VM (virtualbox driver only)
        --host-only-nic-type=: NIC Type used for host only network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio (virtualbox driver only)
        --hyperkit-vpnkit-sock=: Location of the VPNKit socket used for networking. If empty, disables Hyperkit VPNKitSock, if 'auto' uses Docker for Mac VPNKit connection, otherwise uses the specified VSock (hyperkit driver only)
        --hyperkit-vsock-ports*=: List of guest VSock ports that should be exposed as sockets on the host (hyperkit driver only)
        --hyperv-external-adapter=: External Adapter on which external switch will be created if no external switch is found. (hyperv driver only)
        --hyperv-use-external-switch: Whether to use external switch over Default Switch if virtual switch not explicitly specified. (hyperv driver only)
        --hyperv-virtual-switch=: The hyperv virtual switch name. Defaults to first found. (hyperv driver only)
        --image-mirror-country=: Country code of the image mirror to be used. Leave empty to use the global one. For Chinese mainland users, set it to cn.
        --image-repository=: Alternative image repository to pull docker images from. This can be used when you have limited access to gcr.io. Set it to "auto" to let minikube decide one for you. For Chinese mainland users, you may use local gcr.io mirrors such as registry.cn-hangzhou.aliyuncs.com/google_containers
        --insecure-registry*=: Insecure Docker registries to pass to the Docker daemon.  The default service CIDR range will automatically be added.
        --install-addons: If set, install addons. Defaults to true.
        --interactive: Allow user prompts for more information
        --iso-url*=: Locations to fetch the minikube ISO from.
        --keep-context: This will keep the existing kubectl context and will create a minikube context.
        --kubernetes-version=: 'The Kubernetes version that the minikube VM will use (ex: v1.2.3, ''stable'' for v1.33.1, ''latest'' for v1.33.1). Defaults to ''stable''.'
        --kvm-gpu: Enable experimental NVIDIA GPU support in minikube
        --kvm-hidden: Hide the hypervisor signature from the guest in minikube (kvm2 driver only)
        --kvm-network=: The KVM default network name. (kvm2 driver only)
        --kvm-numa-count=: Simulate numa node count in minikube, supported numa node count range is 1-8 (kvm2 driver only)
        --kvm-qemu-uri=: The KVM QEMU connection URI. (kvm2 driver only)
        --listen-address=: IP Address to use to expose ports (docker and podman driver only)
        --memory=: 'Amount of RAM to allocate to Kubernetes (format: <number>[<unit>], where unit = b, k, m or g). Use "max" to use the maximum amount of memory. Use "no-limit" to not specify a limit (Docker/Podman only)'
        --mount: This will start the mount daemon and automatically mount files into minikube.
        --mount-9p-version=: Specify the 9p version that the mount should use
        --mount-gid=: Default group id used for the mount
        --mount-ip=: Specify the ip that the mount should be setup on
        --mount-msize=: The number of bytes to use for 9p packet payload
        --mount-options*=: Additional mount options, such as cache=fscache
        --mount-port=: Specify the port that the mount should be setup on, where 0 means any free port.
        --mount-string=: The argument to pass the minikube mount command on start.
        --mount-type=: 'Specify the mount filesystem type (supported types: 9p)'
        --mount-uid=: Default user id used for the mount
        --namespace=: The named space to activate after start
        --nat-nic-type=: NIC Type used for nat network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio (virtualbox driver only)
        --native-ssh: Use native Golang SSH client (default true). Set to 'false' to use the command line 'ssh' command when accessing the docker machine. Useful for the machine drivers when they will not start with 'Waiting for SSH'.
        --network-plugin=: 'DEPRECATED: Replaced by --cni'
        --network=: network to run minikube with. Used by docker/podman, qemu, kvm, and vfkit drivers. If left empty, minikube will create a new network.
        --nfs-share*=: Local folders to share with Guest via NFS mounts (hyperkit driver only)
        --nfs-shares-root=: Where to root the NFS Shares, defaults to /nfsshares (hyperkit driver only)
        --no-kubernetes: If set, minikube VM/container will start without starting or configuring Kubernetes. (only works on new clusters)
        --no-vtx-check: Disable checking for the availability of hardware virtualization before the vm is started (virtualbox driver only)
        --ports*=: List of ports that should be exposed (docker and podman driver only)
        --preload: If set, download tarball of preloaded images if available to improve start time. Defaults to true.
        --qemu-firmware-path=: 'Path to the qemu firmware file. Defaults: For Linux, the default firmware location. For macOS, the brew installation location. For Windows, C:\Program Files\qemu\share'
        --registry-mirror*=: Registry mirrors to pass to the Docker daemon
        --service-cluster-ip-range=: The CIDR to be used for service cluster IPs.
        --socket-vmnet-client-path=: Path to the socket vmnet client binary (QEMU driver only)
        --socket-vmnet-path=: Path to socket vmnet binary (QEMU driver only)
        --ssh-ip-address=: IP address (ssh driver only)
        --ssh-key=: SSH key (ssh driver only)
        --ssh-port=: SSH port (ssh driver only)
        --ssh-user=: SSH user (ssh driver only)
        --static-ip=: 'Set a static IP for the minikube cluster, the IP must be: private, IPv4, and the last octet must be between 2 and 254, for example 192.168.200.200 (Docker and Podman drivers only)'
        --subnet=: Subnet to be used on kic cluster. If left empty, minikube will choose subnet address, beginning from 192.168.49.0. (docker and podman driver only)
        --trace=: 'Send trace events. Options include: [gcp]'
        --uuid=: Provide VM UUID to restore MAC address (hyperkit driver only)
        --vm: Filter to use only VM Drivers
        --vm-driver=: DEPRECATED, use `driver` instead.
        --wait*=: 'comma separated list of Kubernetes components to verify and wait for after starting a cluster. defaults to "apiserver,system_pods", available options: "apiserver,system_pods,default_sa,apps_running,node_ready,kubelet,extra" . other acceptable values are ''all'' or ''none'', ''true'' and ''false'''
        --wait-timeout=: max time to wait per Kubernetes or host to be healthy.
        -c, --container-runtime=: 'The container runtime to be used. Valid options: docker, cri-o, containerd (default: auto)'
        -d, --driver=: 'Driver is one of: virtualbox, kvm2, qemu2, qemu, vmware, none, docker, podman, ssh (defaults to auto-detect)'
        -g, --gpus=: 'Allow pods to use your GPUs. Options include: [all,nvidia,amd] (Docker driver with Docker container-runtime only)'
        -n, --nodes=: The total number of nodes to spin up. Defaults to 1.
        -o, --output=: 'Format to print stdout in. Options include: [text,json]'
    - name: status
      description: Gets the status of a local Kubernetes cluster
      flags:
        -f, --format=: |-
            Go template format string for the status output.  The format for Go templates can be found here: https://pkg.go.dev/text/template
            For the list accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#Status
        -l, --layout=: 'output layout (EXPERIMENTAL, JSON only): ''nodes'' or ''cluster'''
        -n, --node=: The node to check status for. Defaults to control plane. Leave blank with default format for status on all nodes.
        -o, --output=: minikube status --output OUTPUT. json, text
        -w, --watch?: Continuously listing/getting the status with optional interval duration.
    - name: stop
      description: Stops a running local Kubernetes cluster
      flags:
        --all: Set flag to stop all profiles (clusters)
        --cancel-scheduled: cancel any existing scheduled stop requests
        --keep-context-active: keep the kube-context active after cluster is stopped. Defaults to false.
        --schedule=: Set flag to stop cluster after a set amount of time (e.g. --schedule=5m)
        -o, --output=: 'Format to print stdout in. Options include: [text,json]'
    - name: tunnel
      description: Connect to LoadBalancer services
      flags:
        --bind-address=: set tunnel bind address, empty or '*' indicates the tunnel should be available for all interfaces
        -c, --cleanup: call with cleanup=true to remove old tunnels
    - name: unpause
      aliases:
        - resume
      description: unpause Kubernetes
      flags:
        -A, --all-namespaces: If set, unpause all namespaces
        -n, --namespaces*=: namespaces to unpause
        -o, --output=: 'Format to print stdout in. Options include: [text,json]'
    - name: update-check
      description: Print current and latest version number
    - name: update-context
      description: Update kubeconfig in case of an IP or port change
    - name: version
      description: Print the version of minikube
      flags:
        --components: list versions of all components included with minikube. (the cluster must be running)
        --short: Print just the version number.
        -o, --output=: One of 'yaml' or 'json'.
